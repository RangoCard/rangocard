<?php

namespace AppBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    public function findUserBySale($sale, $user)
    {
        $qb = $this->createQueryBuilder('u')
            ->select(
                'sl.id as id',
                'sl.name as name',
                'sl.startDate as startDate',
                'sl.endDate as endDate',
                'sl.sealLimit as sealLimit',
                'u.id as userId',
                'u.name as userName',
                'se.createdAt as sealCreatedAt'
            )
            ->innerJoin('u.seals', 'se')
            ->innerJoin('se.sale', 'sl')
            ->where('sl = :sale')
            ->andWhere('u.name LIKE :user')
            ->setParameter('sale', $sale)
            ->setParameter('user', '%'.$user.'%')
            ->orderBy('u.id', 'DESC');

        return $qb->getQuery()->getResult();
    }

    public function getUsersByCity($city)
    {
        $qb = $this->createQueryBuilder('u')
            ->where('u.city LIKE :city')
            ->setParameter('city', '%'.$city.'%');

        return $qb->getQuery()->getResult();
    }

    public function getTotalSealsBySale($sale, $user)
    {
        $qb = $this->createQueryBuilder('u')
            ->select('COUNT(s.id)')
            ->innerJoin('u.seals', 's')
            ->where('s.sale = :sale')
            ->andWhere('u = :user')
            ->setParameter('user', $user)
            ->setParameter('sale', $sale)
            ->setMaxResults(1);

        return $qb->getQuery()->getSingleResult();
    }
}
